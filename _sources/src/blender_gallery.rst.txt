===================
Blenderギャラリー
===================

.. figure:: ./img/ball_and_stick.png
   :scale: 30%
   :align: left

   :ref:`ball_and_stick<ball_and_stick>` 

.. figure:: ./img/bicolor.png
   :scale: 30%
   :align: right

   :ref:`bicolor<bicolor>` 

.. figure:: ./img/cartoony.png
   :scale: 30%
   :align: center

   :ref:`漫画風<cartoony>` 

:ref:`space_filling<space_filling>`
:ref:`stick<stick>`
:ref:`animation<animation>`
:ref:`motion_blur<motion_blur>`



コード
==========

.. _ball_and_stick:

ball_and_stick
------------------

Bulk構造でball_and_stickを適用する場合,結合の数が多くなるため,Blender上でのPythonスクリプトの実行にかなり時間がかかるので注意.

>>> make_py_script("-",BallAndStick(atoms))


.. _bicolor:

bicolor
------------------

>>> make_py_script("-",BallAndStick(atoms,bicolor=True))


.. _space_filling:

space_filling
------------------

>>> make_py_script("-", SpaceFilling(atoms))


.. _stick:

stick
------------------

>>> make_py_script("-", Stick(atoms))


.. _animation:

アニメーション
------------------

詳しいやり方は :doc:`チュートリアル<./tutorial/blender_tutorial>` を参考にする

>>> make_py_script("Animation.zip", traj)

| animation.zipをローカルPC上にダウンロードして展開する.
 Python,pickleファイルと同じ場所にblenderファイルを作成する(先にblenderファイルを作成しないとpython実行時にエラーになる).
| Blenderでpythonコードを実行し,構造をインポートする.
| アニメーションをレンダリングする(重いのでEeveeの方が良い)


.. _cartoony:

漫画風
----------------

Matlantis上
^^^^^^^^^^^^^^^^^^
pyスクリプトを作成する(例としてBallAndStick)

>>> make_py_script("-",BallAndStick(atoms,cartoon={"apply":True}))

| cartoonでは次のようなシェダーが設定されている.フレネルとミックスを入れ,BSDFの粗さを1に設定にすることで漫画風にしている.
| フレネルのIRC値を変更することで枠線の太さを変えることができる.

.. image:: ./img/node.png
   :scale: 60%
   :align: center

.. _motion_blur:

モーションブラー
--------------------

キーフレームを打ち,モーションブラーでレンダリングをする.




